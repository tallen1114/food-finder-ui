{"ast":null,"code":"var _jsxFileName = \"/Users/tinaallen/code/food-finder-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [maxSugar, setMaxSugar] = useState(10); // Initial max sugar value\n  const [cereals, setCereals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchCereals = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(`http://localhost:8080/search?maxSugar=${maxSugar}&offset=0`);\n        const data = await response.json();\n        setCereals(data);\n      } catch (error) {\n        console.error('Error fetching cereals:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCereals();\n  }, [maxSugar]); // Fetch cereals whenever maxSugar changes\n\n  const handleMaxSugarChange = event => {\n    setMaxSugar(parseInt(event.target.value, 10));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cereal Finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"maxSugar\",\n        children: \"Max Sugar (grams): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"maxSugar\",\n        value: maxSugar,\n        onChange: handleMaxSugarChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading cereals...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cereals.map(cereal => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: cereal.description\n      }, cereal.Id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OiDYANMA6jIzdrPgJIprVZZtBmU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","maxSugar","setMaxSugar","cereals","setCereals","isLoading","setIsLoading","fetchCereals","response","fetch","data","json","error","console","handleMaxSugarChange","event","parseInt","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","map","cereal","description","Id","_c","$RefreshReg$"],"sources":["/Users/tinaallen/code/food-finder-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [maxSugar, setMaxSugar] = useState(10); // Initial max sugar value\n  const [cereals, setCereals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCereals = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(`http://localhost:8080/search?maxSugar=${maxSugar}&offset=0`); \n        const data = await response.json();\n        setCereals(data);\n      } catch (error) {\n        console.error('Error fetching cereals:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCereals();\n  }, [maxSugar]); // Fetch cereals whenever maxSugar changes\n\n  const handleMaxSugarChange = (event) => {\n    setMaxSugar(parseInt(event.target.value, 10));\n  };\n\n  return (\n    <div>\n      <h1>Cereal Finder</h1>\n      <div>\n        <label htmlFor=\"maxSugar\">Max Sugar (grams): </label>\n        <input\n          type=\"number\"\n          id=\"maxSugar\"\n          value={maxSugar}\n          onChange={handleMaxSugarChange}\n        />\n      </div>\n\n      {isLoading ? (\n        <p>Loading cereals...</p>\n      ) : (\n        <ul>\n          {cereals.map((cereal) => (\n            <li key={cereal.Id}>{cereal.description}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/BD,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCR,QAAQ,WAAW,CAAC;QAC1F,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,UAAU,CAACM,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,SAAS;QACRN,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,MAAMa,oBAAoB,GAAIC,KAAK,IAAK;IACtCb,WAAW,CAACc,QAAQ,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC;EAC/C,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBzB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAO0B,OAAO,EAAC,UAAU;QAAAL,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrDzB,OAAA;QACE2B,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC,UAAU;QACbR,KAAK,EAAEjB,QAAS;QAChB0B,QAAQ,EAAEb;MAAqB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELlB,SAAS,gBACRP,OAAA;MAAAqB,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEzBzB,OAAA;MAAAqB,QAAA,EACGhB,OAAO,CAACyB,GAAG,CAAEC,MAAM,iBAClB/B,OAAA;QAAAqB,QAAA,EAAqBU,MAAM,CAACC;MAAW,GAA9BD,MAAM,CAACE,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0B,CAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvB,EAAA,CAlDQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}